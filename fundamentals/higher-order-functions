![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a7161e9a-6025-49da-81b7-cbda869d59d8/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a7161e9a-6025-49da-81b7-cbda869d59d8/Untitled.png)

- .forEach() creates a new array populated with the results of calling a provided function on every element in the calling array

    ```jsx
    const array1 = ['a', 'b', 'c'];

    array1.forEach(element => console.log(element));

    // expected output: "a"
    // expected output: "b"
    // expected output: "c"
    ```

- .map() creates a new array populated with the results of calling a provided function on every element in the calling array

    ```jsx
    const array1 = [1, 4, 9, 16];

    // pass a function to map
    const map1 = array1.map(x => x * 2);

    console.log(map1);
    // expected output: Array [2, 8, 18, 32]
    ```

- .filter() creates a new array with all elements that pass the test implemented by the provided function

    ```jsx
    const words = 
    ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];

    const result = words.filter(word => word.length > 6);

    console.log(result);
    // expected output: Array ["exuberant", "destruction", "present"]
    ```

- .reduce() reduces the array to a single value, executes a provided function for each value of the array, and return the value of the function in an accumulator
    - 

    ```jsx
    const array1 = [1, 2, 3, 4];
    const reducer = (accumulator, currentValue) => accumulator + currentValue;

    // 1 + 2 + 3 + 4
    console.log(array1.reduce(reducer));
    // expected output: 10

    // 5 + 1 + 2 + 3 + 4
    console.log(array1.reduce(reducer, 5));
    // expected output: 15
    ```

- .sort() *mutated the array

    ```jsx
    const months = ['March', 'Jan', 'Feb', 'Dec'];
    months.sort();
    console.log(months);
    // expected output: Array ["Dec", "Feb", "Jan", "March"]

    const array1 = [1, 30, 4, 21, 100000];
    array1.sort();
    console.log(array1);
    // expected output: Array [1, 100000, 21, 30, 4]
    ```

- .some()
- .every()

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d3f5cfd6-76e4-4aaf-b99d-dae993867b40/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d3f5cfd6-76e4-4aaf-b99d-dae993867b40/Untitled.png)
